YES
Signature: [ 
  cons : nat -> list -> list ;
  map : (nat -> nat) -> list -> list ;
  merge : list -> list -> list -> list ;
  nil : list
]

Rules: [
  merge nil nil X => X ;
  merge nil (cons Y Z) U => merge Z nil (cons Y U) ;
  merge (cons V W) Q R => merge Q W (cons V R) ;
  map F nil => nil ;
  map G (cons S T) => cons (G S) (map G T)
]

Interpretation: [
  J(cons) = Lam[y0;y1].2 + 3*y0 ;
  J(map) = Lam[G0;y1].3 + 3*y1 + G0(y1) + 2*y1*G0(y1) + 3*G0(0) ;
  J(merge) = Lam[y0;y1;y2].3 + 3*y0 + 3*y1 ;
  J(nil) = 1 
]

Removed: [
  merge nil nil X => X ;
  merge nil (cons Y Z) U => merge Z nil (cons Y U) ;
  merge (cons V W) Q R => merge Q W (cons V R) ;
  map F nil => nil ;
  map G (cons S T) => cons (G S) (map G T)
]

