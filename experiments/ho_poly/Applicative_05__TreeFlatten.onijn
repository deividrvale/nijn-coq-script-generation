YES
Signature: [ 
  append : a -> a -> a ;
  concat : a -> a ;
  cons : a -> a -> a ;
  flatten : a -> a ;
  map : (a -> a) -> a -> a ;
  nil : a ;
  node : a -> a -> a
]

Rules: [
  map F nil => nil ;
  map G (cons X Y) => cons (G X) (map G Y) ;
  flatten (node Z U) => cons Z (concat (map flatten U)) ;
  concat nil => nil ;
  concat (cons V W) => append V (concat W) ;
  append nil Q => Q ;
  append (cons R S) T => cons R (append S T)
]

Interpretation: [
  J(append) = Lam[y0;y1].y0 ;
  J(concat) = Lam[y0].y0 ;
  J(cons) = Lam[y0;y1].2 ;
  J(flatten) = Lam[y0].0 ;
  J(map) = Lam[G0;y1].y1 + 3*y1*G0(y1) + 3*G0(0) + 3*G0(y1) ;
  J(nil) = 3 ;
  J(node) = Lam[y0;y1].3 + 3*y0 + 3*y1 
]

Removed: [
  map F nil => nil ;
  map G (cons X Y) => cons (G X) (map G Y) ;
  flatten (node Z U) => cons Z (concat (map flatten U)) ;
  concat nil => nil ;
  concat (cons V W) => append V (concat W) ;
  append nil Q => Q ;
  append (cons R S) T => cons R (append S T)
]

